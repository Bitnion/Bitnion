#!/usr/bin/env bash
#
# macdeployqtplus — Bitnion Qt DMG Packaging Script
#
# This script automates the creation of a polished macOS .dmg installer
# for the Bitnion Core Qt application using Qt's macdeployqt, and adds:
# - custom background
# - icon layout
# - detached signature support
#
# License: MIT
# Adapted from Bitcoin Core

set -e

APP_BUNDLE_NAME="Bitnion-Qt.app"
VOLUME_NAME="Bitnion-Core"
DMG_NAME="Bitnion-Core.dmg"
STAGING_DIR="dmg-staging"
FINAL_DIR="dmg-final"
QT_PATH="/usr/local/opt/qt"  # Adjust if using a different Qt path
BACKGROUND_IMAGE="background.png"

echo "[*] Starting macdeployqtplus for Bitnion..."

# Clean up previous staging
rm -rf "$STAGING_DIR" "$FINAL_DIR" "$DMG_NAME"
mkdir -p "$STAGING_DIR" "$FINAL_DIR"

# Copy application bundle
cp -R "$APP_BUNDLE_NAME" "$STAGING_DIR/"

# Run Qt deployment tool
echo "[+] Running macdeployqt..."
"$QT_PATH/bin/macdeployqt" "$STAGING_DIR/$APP_BUNDLE_NAME" -dmg || true

# Add Applications symlink
ln -s /Applications "$STAGING_DIR/Applications"

# Create .background folder and copy image
mkdir -p "$STAGING_DIR/.background"
cp "$BACKGROUND_IMAGE" "$STAGING_DIR/.background/"

# Optional: apply Finder layout (via custom_dsstore.py or fancy.plist)
if [ -x "./custom_dsstore.py" ]; then
  echo "[+] Applying Finder layout..."
  ./custom_dsstore.py "$STAGING_DIR" --background "$BACKGROUND_IMAGE"
fi

# Build .dmg
echo "[+] Creating .dmg file..."
hdiutil create -volname "$VOLUME_NAME" \
  -srcfolder "$STAGING_DIR" \
  -ov -format UDZO "$DMG_NAME"

# Move to final output directory
mv "$DMG_NAME" "$FINAL_DIR/"

echo "[✓] DMG created successfully: $FINAL_DIR/$DMG_NAME"
echo "    Ready for signature and notarization."
